#Chargement de baseflor
baseflor <- read_excel("data/catminat/baseflor.xlsx")
# Charger les bibliotheques necessaires
if(!require("readxl")){install.packages("readxl")} ; library("readxl")
#Chargement de baseflor
baseflor <- read_excel("data/catminat/baseflor.xlsx")
library(httr)
if(!require("httr")){install.packages("httr")} ; library("httr")
# Fonction pour charger le contenu d'un fichier depuis un lien MEGA dans une variable
load_from_mega <- function(url) {
# Envoyer une requête GET pour obtenir le contenu du fichier
response <- GET(url)
# Vérifier si la requête a réussi
if (status_code(response) == 200) {
# Lire le contenu du fichier en fonction de son type
content <- content(response, "text")
return(content)
} else {
stop("Échec du chargement. Statut: ", status_code(response))
}
}
# Exemple de lien MEGA
mega_link <- "https://mega.nz/file/6pcwnKDS#__fn7tWcjvOwWzKPJ0-ztQMFrkd76r5yjCwYoIK-pS0"
# Charger le contenu du fichier dans une variable
file_content <- load_from_mega(mega_link)
# Afficher le contenu du fichier
cat(file_content)
# Fonction pour charger le contenu d'un fichier depuis un lien MEGA dans une variable
load_csv_from_mega <- function(url) {
# Envoyer une requête GET pour obtenir le contenu du fichier
response <- GET(url)
# Vérifier si la requête a réussi
if (status_code(response) == 200) {
# Lire le contenu du fichier en tant que CSV
content <- content(response, "raw")
data <- read.table(textConnection(rawToChar(content)))
return(data)
} else {
stop("Échec du chargement. Statut: ", status_code(response))
}
}
# Exemple de lien MEGA
mega_link <- "https://mega.nz/file/6pcwnKDS#__fn7tWcjvOwWzKPJ0-ztQMFrkd76r5yjCwYoIK-pS0"
# Charger le contenu du fichier dans une variable
file_content <- load_from_mega(mega_link)
# Afficher le contenu du fichier
cat(file_content)
# Fonction pour charger le contenu d'un fichier depuis un lien MEGA dans une variable
load_text_from_mega <- function(direct_link) {
response <- GET(direct_link)
if (status_code(response) == 200) {
content <- content(response, "text")
return(content)
} else {
stop("Échec du chargement. Statut: ", status_code(response))
}
}
# Charger le contenu du fichier texte
file_content <- load_text_from_mega(direct_link)
# Fonction pour obtenir le lien de téléchargement direct
get_mega_direct_link <- function(mega_url) {
api_url <- "https://api.arrietty.jp/files/getlink"  # Un service qui convertit les liens MEGA
response <- POST(api_url, body = list(url = mega_url), encode = "json")
if (status_code(response) == 200) {
link_info <- fromJSON(content(response, "text"))
return(link_info$url)
} else {
stop("Échec de l'obtention du lien direct. Statut: ", status_code(response))
}
}
# Exemple de lien MEGA
mega_link <- "https://mega.nz/file/6pcwnKDS#__fn7tWcjvOwWzKPJ0-ztQMFrkd76r5yjCwYoIK-pS0"
# Obtenir le lien de téléchargement direct
direct_link <- get_mega_direct_link(mega_link)
# Obtenir le lien de téléchargement direct
direct_link <- get_mega_direct_link(mega_link)
# Charger les packages nécessaires
library(httr)
library(jsonlite)
read.csv2("https://zenodo.org/api/records/12698335/draft/files/taxonPatriNatGBIF202403.csv")
read.csv2("https://zenodo.org/api/records/12698335/draft/files/taxonPatriNatGBIF202403.csv/content")
read.csv2("https://zenodo.org/records/12698335?token=eyJhbGciOiJIUzUxMiJ9.eyJpZCI6IjM3MjM0ZjZiLTNlNzItNDVlZi1iZGMzLTE2ZGM1ODI1ZDk2YyIsImRhdGEiOnt9LCJyYW5kb20iOiI2ZDIyZmNhZmFhMDJjYWE0ODU4NjczMTc0ZWJhNjM3MyJ9.Ip5T_Ve6P0QxZK6np4bTgv8Wip4SP4dmldEpi3-Uyad6GokQWn8tvNlBDLsRRTz06btq9PU_erxFUMmOZ1yibg")
read.csv2("https://zenodo.org/records/12698335/files/taxonPatriNatGBIF202403.csv?download=1")
taxaGBIF = read.csv2("https://zenodo.org/records/12698335/files/taxonPatriNatGBIF202403.csv?download=1")
