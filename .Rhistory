source("function/taxabase.R")
taxaGBIF = read.csv2("https://zenodo.org/records/12698335/files/taxonPatriNatGBIF202403.csv?download=1")
taxaGBIF$scientificName
View(taxaGBIF)
taxaGBIF %>% filter(kindom == Plantae)
taxaGBIF %>% filter(kingdom == Plantae)
taxaGBIF %>% filter(kingdom == Plantae)
taxaGBIF %>% filter(kingdom == "Plantae")
taxaGBIF = taxaGBIF %>% filter(kingdom == "Plantae")
taxaGBIF = read.csv2("https://zenodo.org/records/12698335/files/taxonPatriNatGBIF202403.csv?download=1")
#On filtre les plantes
taxaGBIF = taxaGBIF %>% filter(kingdom == "Plantae")
source("function/taxabase.R")
#On filtre les plantes
taxaGBIF = taxaGBIF %>% filter(kingdom == "Plantae")
taxrefgbif = find_taxaref(taxaGBIF$scientificName)
taxrefgbif = find_taxaref(taxaGBIF$scientificName[100000:101000])
source("function/taxabase.R")
taxrefgbif = find_taxaref(taxaGBIF$scientificName[100000:101000])
View(taxrefgbif)
View(taxaGBIF)
View(taxrefgbif)
#Chargement des données de références
HABREF_CORRESP_TAXON_70 = load_data("HABREF_CORRESP_TAXON_70","data/HABREF_70/HABREF_CORRESP_TAXON_70.csv")
source("function/taxabase.R")
#Chargement des données de références
HABREF_CORRESP_TAXON_70 = load_data("HABREF_CORRESP_TAXON_70","data/HABREF_70/HABREF_CORRESP_TAXON_70.csv")
View(HABREF_CORRESP_TAXON_70)
taxon_hab(28)
source("function/habref_functin.R")
source("function/habref_function.R")
taxon_hab(28)
PVF2 = taxon_hab(28)
PVF2 %>% mutate(P = 1)
PVF2 %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P, values_fill = list(P = 0))
PVF2 %>% select(CD_NOM,LB_HAB_FR) %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P, values_fill = list(P = 0))
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P, values_fill = list(P = 0))
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P, values_fill = 0)
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P)
View(PVF2)
?pivot_wider
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
group_by(CD_NOM, LB_HAB_FR) %>%
summarise(n = dplyr::n(), .groups = "drop") %>%
filter(n > 1L)%>%
pivot_wider(names_from = LB_HAB_FR, values_from = P,values_fill = list(P = 0))
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
group_by(CD_NOM, LB_HAB_FR) %>%
summarise(n = dplyr::n(), .groups = "drop") %>%
filter(n > 1L)
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
group_by(CD_NOM, LB_HAB_FR) %>%
summarise(n = dplyr::n(), .groups = "drop")
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
group_by(CD_NOM, LB_HAB_FR) %>%
summarise(n = dplyr::n(), .groups = "drop")%>%
pivot_wider(names_from = LB_HAB_FR, values_from = P,values_fill = list(P = 0))
PVF2 %>% select(LB_HAB_FR,CD_NOM) %>% mutate(P = 1) %>%
group_by(CD_NOM, LB_HAB_FR) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P,values_fill = list(P = 0))
TAXREFv17 = read.csv("TAXREFv17_FLORE_FR_SYN.csv",h=T)
TAXREFv17 = read.csv("data/TAXREF_17/TAXREFv17_FLORE_FR_SYN.csv",h=T)
TAXREFv17tojoin = TAXREFv17 %>% select(CD_NOM = CD_REF, LB_NOM)
PVF2 = left_join(PVF2,TAXREFv17tojoin,by='CD_NOM')
View(PVF2)
PVF2 = taxon_hab(28)
View(PVF2)
PVF2 = left_join(PVF2,TAXREFv17tojoin,by='CD_NOM')
TAXREFv17tojoin = TAXREFv17 %>% select(CD_NOM, LB_NOM)
PVF2 = taxon_hab(28)
PVF2 = left_join(PVF2,TAXREFv17tojoin,by='CD_NOM')
View(PVF2)
updatetaxa(PVF2$CD_NOM)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
PVF2 = taxon_hab(28)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
PVF2 = left_join(PVF2,TAXREFv17tojoin,by='CD_NOM')
View(PVF2)
PVF2contingence = PVF2 %>% select(LB_HAB_FR,LB_NOM) %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P,values_fill = list(P = 0))
?left_join
PVF2$CD_NOM
c(114114,103536 ,114658,112739,44555555555,57366727888) %in% PVF2$CD_NOM
PVF2$CD_NOM %in% c(114114,103536 ,114658,112739,44555555555,57366727888)
if(!require("sf")){install.packages("sf")} ; library("sf")
if(!require("foreign")){install.packages("foreign")} ; library("foreign") # Pour read.dbf
if(!require("RVAideMemoire")){install.packages("RVAideMemoire")} ; library("RVAideMemoire")
if(!require("vegan")){install.packages("vegan")} ; library("vegan")
source("function/taxabase.R")
source("function/habref_function.R")
#Chargement des données  KIT BOTA QFIELD
Flore = read.dbf("FLore/Flore.dbf")
# Prépration du tableau de relevé à partir du KIT BOTA QFIELD
FloreRELEVE = Flore %>% filter(!is.na(RELEVE)==TRUE) %>% select(RELEVE,LB_NOM = NomComplet) %>% mutate(P = 1)
View(Flore)
# Prépration du tableau de relevé à partir du KIT BOTA QFIELD
FloreRELEVE = Flore %>% filter(!is.na(releve)==TRUE) %>% select(releve,lb_nom) %>% mutate(P = 1)
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$LB_NOM)
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$lb_nom)
FloreRELEVE$lb_nom
View(FloreRELEVE)
findtaxa(FloreRELEVE$lb_nom)
left_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))
left_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))$CD_NOM
inner_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))$CD_NOM
inner_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))
inner_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))$LB_NOM
left_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))
TAXREFv17tojoin = TAXREFv17 %>% select(CD_NOM, LB_NOM)$lb_nom
left_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))$lb_nom
FloreRELEVE$lb_nom
test =left_join(FloreRELEVE,TAXREFv17,by=c("lb_nom"="LB_NOM"))
unique(test)
unique(test)$lb_nom
unique(test$lb_nom
)
duplicated()
duplicated(test$lb_nom)
test$lb_nom
?duplicated
?anyDuplicated(test$lb_nom)
anyDuplicated(test$lb_nom)
duplicated(test$lb_nom)
duplicated(test$lb_nom,incomparables = TRUE)
duplicated(test$lb_nom,fromLasr = TRUE)
duplicated(test$lb_nom,fromLast = TRUE)
###################Renvoie le CD_NOM actualisé à partir d'une liste d'espèce
findtaxa = function(listetaxa,
referenciel = "TAXREF_70",
correspondance_type = "simple",
actualisation_CD_NOM = TRUE){
if(referenciel == "TAXREF_70"){
load_data("taxadata","data/TAXREF_17/TAXREFv17_FLORE_FR.csv",sep=",")
}
if(correspondance_type=="simple"){
listetaxa = data.frame("LB_NOM" = listetaxa)
listetaxa_join = left_join(listetaxa,taxadata,by="LB_NOM")
#Gesiton des duplicats
T1 = !duplicated(listetaxa_join$LB_NOM,fromLast = TRUE)
T2 = duplicated(listetaxa_join$LB_NOM,fromLast = TRUE)
T2 = T2 %>% filter(CD_NOM==CD_REF)
listetaxa_join = rbind(T1,T2)
CD_NOM = listetaxa_join$CD_NOM
}
#Actualisation du CD_NOM
if(actualisation_CD_NOM == TRUE){
CD_NOM = updatetaxa(CD_NOM)
return(CD_NOM)
}
}
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$lb_nom)
###################Renvoie le CD_NOM actualisé à partir d'une liste d'espèce
findtaxa = function(listetaxa,
referenciel = "TAXREF_70",
correspondance_type = "simple",
actualisation_CD_NOM = TRUE){
if(referenciel == "TAXREF_70"){
load_data("taxadata","data/TAXREF_17/TAXREFv17_FLORE_FR.csv",sep=",")
}
if(correspondance_type=="simple"){
listetaxa = data.frame("LB_NOM" = listetaxa)
listetaxa_join = left_join(listetaxa,taxadata,by="LB_NOM")
#Gesiton des duplicats
T1 = listetaxa_join[!duplicated(listetaxa_join$LB_NOM,fromLast = TRUE),]
T2 = listetaxa_join[duplicated(listetaxa_join$LB_NOM,fromLast = TRUE),]
T2 = T2 %>% filter(CD_NOM==CD_REF)
listetaxa_join = rbind(T1,T2)
CD_NOM = listetaxa_join$CD_NOM
}
#Actualisation du CD_NOM
if(actualisation_CD_NOM == TRUE){
CD_NOM = updatetaxa(CD_NOM)
return(CD_NOM)
}
}
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$lb_nom)
findtaxa(FloreRELEVE$lb_nom)
###################Renvoie le CD_NOM actualisé à partir d'une liste d'espèce
findtaxa = function(listetaxa,
referenciel = "TAXREF_70",
correspondance_type = "simple",
actualisation_CD_NOM = TRUE){
if(referenciel == "TAXREF_70"){
load_data("taxadata","data/TAXREF_17/TAXREFv17_FLORE_FR.csv",sep=",")
}
if(correspondance_type=="simple"){
listetaxa = data.frame("LB_NOM" = listetaxa)
listetaxa_join = left_join(listetaxa,taxadata,by="LB_NOM")
CD_NOM = listetaxa_join$CD_NOM
}
return(CD_NOM)
}
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$lb_nom)
rm(TAXREFv17)
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$lb_nom)
findtaxa(FloreRELEVE$lb_nom)
listetaxa = FloreRELEVE$lb_nom
load_data("taxadata","data/TAXREF_17/TAXREFv17_FLORE_FR.csv",sep=",")
rm(taxadata)
load_data("taxadata","data/TAXREF_17/TAXREFv17_FLORE_FR.csv",sep=",")
rm("taxadata")
rm("taxadata")
environment()
environmentName()
environmentName(PVF2)
environmentName("PVF2")
environmentName(crotte)
exists(PVF2)
?exists
exists(myVarName, envir = myEnvir
)
get0(test)
exists("myVarName", envir = myEnvir
)
if(referenciel == "TAXREF_70"){
load_data("taxadata","data/TAXREF_17/TAXREFv17_FLORE_FR.csv",sep=",")
}
exists(myVarName)
exists("PVF2")
exists("PVF3")
FloreRELEVE$CD_NOM = findtaxa(FloreRELEVE$lb_nom)
#Charement de taxref
TAXREFv17 = read.csv("data/TAXREF_17/TAXREFv17_FLORE_FR_SYN.csv",h=T)
TAXREFv17tojoin = TAXREFv17 %>% select(CD_NOM, LB_NOM)
PVF2 = taxon_hab(28)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
PVF2[PVF2$CD_NOM %in% FloreRELEVE$CD_NOM,]
PVF2 = PVF2[PVF2$CD_NOM %in% FloreRELEVE$CD_NOM,]
PVF2 = left_join(PVF2,TAXREFv17tojoin,by='CD_NOM')
PVF2contingence = PVF2 %>% select(LB_HAB_FR,LB_NOM) %>% mutate(P = 1) %>%
pivot_wider(names_from = LB_HAB_FR, values_from = P,values_fill = list(P = 0))
View(PVF2)
PVF2 = taxon_hab(28)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
PVF2 = PVF2[PVF2$CD_NOM %in% FloreRELEVE$CD_NOM,]
View(PVF2)
PVF2 = taxon_hab(28)
View(PVF2)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
View(PVF2)
PVF2[PVF2$CD_NOM %in% FloreRELEVE$CD_NOM,]
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM)
PVF2 %>% filtze(CD_NOM %in% FloreRELEVE$CD_NOM)
PVF2 %>% filter(CD_NOM %in% FloreRELEVE$CD_NOM)
?match
PVF2 %>% filter(match(CD_NOM,FloreRELEVE$CD_NOM))
PVF2 %>% match(CD_NOM,FloreRELEVE$CD_NOM)
PVF2 %>% match(PVF2$CD_NOM,FloreRELEVE$CD_NOM)
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM)
PVF2 = match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,namatch=O)
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,namatch=O)
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch=O)
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch= 0)
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,namatch=O)==O
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,namatch=0)==0
match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch=0)==0
!match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch=0)==0
PVF2[!match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch=0)==0,]
PVF2 = PVF2[!match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch=0)==0,]
View(PVF2)
PVF2 = taxon_hab(28)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
PVF2 %>% filtrer(!is.na(CD_NOM))
PVF2 %>% filter(!is.na(CD_NOM))
PVF2 = taxon_hab(28)
PVF2$CD_NOM = updatetaxa(PVF2$CD_NOM)
PVF2 = PVF2[!match(PVF2$CD_NOM,FloreRELEVE$CD_NOM,nomatch=0)==0,]
PVF2 = PVF2 %>% filter(!is.na(CD_NOM))
PVF2 = left_join(PVF2,TAXREFv17tojoin,by='CD_NOM')
View(PVF2)
count(PVF2$LB_HAB_FR)
?count
PVF2 %>% count(LB_HAB_FR)
#Comptage des occurences des syntaxons en correspondance aux espèces
PVF2 %>% count(LB_HAB_FR)
#Comptage des occurences des syntaxons en correspondance aux espèces
PVF2 %>% count(LB_HAB_FR,sort = T)
